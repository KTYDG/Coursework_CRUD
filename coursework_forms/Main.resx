<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACBCgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAAAo7SURBVHja7Z17kJVlHce/uLDsgiLgKCwsghpoBEipTaXBOCrhJbCksbFRdEZrYELG
        RikVNAQRuRqWchHRkCSUm+XYMKEllylABisyQOK23Bx3IVgT2GVPz2nltnv2uO85v2f3fc/7+Xz/ZDnv
        8z7P5zznvfze55UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCUNFGhWqpFvZP8
        2+YN1La8wG1radC2ZgG3aplCFbg9yHdp5vbeO5dpuH6h+VqsRYEyT1P0gK7wKMK5ukmj9Lxey6Btk3Sv
        ijMU7ko9rBcz2KpNXtdv9ape0a/1kmZrhp7ROI3UT/Qj3alb9TVdpPN1tppafbsG6wMlssgevewk8PG9
        v0Vv6VAWLavUX9U/gy3fpG1Z9YivVOqoylWqXVqv32uWHnM6XOJUyIpvqcSgae/rKnMBbtd+g5at1xcC
        i/erUA5/qnyi7XpTY9xX5fxMu3mxUVPmu18uSzq5obNp2fCAW26uuZER4EQOa5UeUvdMfha2GjVhV+Bv
        Wnq+4+y2adkvdVagLee7395EBFPlfrieczNxsL3VMaPNl7qDE0uG6rhRyxYGnJuiKkB1dmq0OgfZXasN
        l+lqUwGGOaNtWvZGwMOkaAuQnAnW6S53GtnAApQiQIhSrgk6DwHiK0DylHG+O0VEgNgKkMy76o0AcRYg
        obfVBQHiLEBCc9UGAeIsQIXGpb9XgwC5LUBCh/R9BIizAAmtVkcEiLMAlfoZAsRZgIQ+VC8EiLMACT1T
        V2URAsRDgM11XRdEgHgIUKF7ESDOAiS0RC0RIM4C7EtdtocA/gWo0F5trSP/1g7tdv++X2U66rlOYDgC
        NIYARzVZ3VWkDnWko7roUvVUHw3WaM3VuqwqodNlZqqaQQTwLcBatQ9UknqB+mu6mxPsBViR6sYQAvgW
        YHYGtbpNdY0WuZ8OWwFK3EyDAA0uwKQMe6CtnjKrjD5RKDYAARpegKcz7oMCPWlWtV19GDgMAaIkgNRa
        80zb8ggCREsAqZe2GLblKQSImgDSE4Ztebb2c0MIEHYBrtA+s7a85PYOASImQGu9Y9aWBSpEgKgJkKfp
        Zm2ZV7tA1Oqjy3SNqQD3I8BJxvi8GGz10Yd1i6kAj5u1LPoC2PXFVH9nAcc1xHD4m2kOApxkollbxvoT
        IKHngi5NkIYirUGAzyh0h25WbXnQpwA79GUzAYYa3huPugDF2mjUkv9qkE8BEnohddFRYC7XPwxbFXUB
        bncDZ9OS/ameFrbc1U81TZdkubBhS92gVaatirYArbTUrCV/Uzu/AiTvN/1TMzRKI1x+GjDJ/zHO7e7H
        xm2KtgD3mX3/E1qUarWkRM4nygLc7I6s7FrysM+aQASwFiBPA03vBH6sryNAYwgwMaPhv0CP6iPTdixX
        awRoDAHmqFmg7Z+lDrpHK8wrAh9NvTkE8C3Axnquodpc56m7btNUbdAR816o8yoNAvgWoEqL1V+XuhPk
        i9VFndVJxeroknwi4GJ3Zv5Nd6j3A43UXK3RXuMy0FOZ4vvpYARIl0NuaPdot0uJyy7t1HZtc9ntfufL
        dNjDN77m9793XbuLAA0hQGNnQt2X5xAg9wVYk27NUATIdQFKNTDd7iJAbgtQpfHpT0MRILcFWPp5j6Yi
        QC4L8K66fd7uIkDuCrChPm9zQ4BcFWCD+tRndxEgNwX4c33f5YgAuSdAlZaoa313FwFyTYADmhBkURoE
        yC0BNmhQ7QdAESAeApRqpi4LWnmCALkhQKleV79M3uOOANEXYIemqW+mz2QgQNQF+EPw9wUjQO4IkPU7
        mxEg2gLsrf8ZPwLkogBHs30sHwGifgzwr9TLwCNAfM4ClqtzWATg4dBUOawFelxj3MnaUm1SuRfJu4ZB
        AB4PT5UKPfHZU7lN3N4Va4Bmaae5An/S5Y0vAAtEpMpmXVRjC011peaYvxZidWYKWF6PYomYVFmmVim2
        UqB7VGKswEr1bEwBWCSqrrLMuubFgeYKvF1rtmkwAVgmLpPt/9AdINoq8LLObRwBWCgyk+0XuMNmWwGO
        6bFgr6ix2jBLxWa2/a76u7ECZfpuYwjAYtGZbn+I+fsC3wtyVQABGluAtnrL/KrAzFTrgSFAOAWQ+rve
        sxWg3J1kIkBkBMjX8x5uEfVGgKgIkHw11FZzBRbU74QQAcIgQBON9lApMAwBoiJA8nRwo7kCm+pzaRgB
        wiGA9JCOmyswu/ZLohAgrAJ00jpzAQ7pewgQFQGS90CPmSvwFycWAkREgHZaYS5AlcamL9FBgPAIIN2l
        Tz0UjvdFgKgI0FbLvFQMtkaAaAgg3WZeIZCs1bwbAaIiwDla7GEOWK0iBIiGANKNOmAuQIXuR4CoCFCo
        VzzMARvUBQGiIYDUx/hlMdWngyMRICoC5GuGhzlgs76IANEQQLrKvGA8madTFe4jQBgFyNNkDwLsTLV4
        JAKEUQCph4cSkYSm1S4ZR4BwCuCjRCShXfoKAkRDAD8lIglNrXlrCAHCKoA0wkOJyM6aj/AiQHgFuFDv
        eZgDJp85ByBAeAXwUyKy/cx1BBAgzAK000oPc8DE068HIECYBZAGeygR2XZ6tTAChFsAPyUi40/NAQgQ
        bgGkQR7WFduqHggQFQHO0RIPc8A4NUGAaAjgp0TkQ3VHgKgIUKh5HuaAsdVzgJ0A30AATwJIfT2UiGyu
        fr1MmdHHfaRepgLcpwqjlr2qgsgL4KdE5OfJOWC90Ye9r3amAvQzW0lzUuDODp8A0lc9lIh8oC/JbGfH
        GS4TmaS90aOSxzW0kQVYarKAbp6mmAtQqUeS69NY/LqsqqvmNAvu1icGLduSuhIuLeNNu3l6lstnn6Cn
        hxKRGckjzBcNbi/0kz0tNMvuWDcQ12qvWRcf0ACj/kiWiFSZDv9R/Tj5wd2yuthYpeXuGLWJfNBBz2Z5
        FexNXZjRdDvE6Kj7gEYEe49nWor0O1MB/nhi3u6kUVqpbdoVMJudOg+6YfJHge7UO9qng/pPwJS51k3M
        aPiTNNUN+o07SCoJ3CcnUqJNek3fNhz+6i/rHPejlnmrTmWL278ep390GzeQxQFTlHIhdGvauBPMa92A
        XB8oVzu7m2YpX/vAPXJm77Tw8pUoyqpVp1pXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIFVqpm65TfxKL
        XOdG+7QnOvJ1q5apRAd1iMQiB91oL3Oj/v+nlvL0gIcVaEj4c8CNfJ50s/bQGTHNHjf6WkRHxDiLpB10
        Q4yzQx5WpCfRyXHRCTEPXYAABAEIAhAEIAhAEIAgAEEAggAEAQgCEAQgCEAQgCAAQQCCACSnBCinE2Kc
        cmkt3RDjrJWeVCUdEdNUutFXcVYvjSNRzjI3+o5eWqwjdEfMcsSN+snXfbfVHZqshXqDxCIL3Wjf4Ua9
        Bi10NolFWrAgBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABASPkf6wtKej5hWHYA
        AAAASUVORK5CYII=
</value>
  </data>
</root>